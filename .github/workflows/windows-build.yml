name: windows-build

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch: {}

concurrency:
  group: windows-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
    env:
      VULKAN_SDK_VERSION: latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache third-party downloads (_deps)
        uses: actions/cache@v4
        with:
          path: build/_deps
          key: deps-${{ runner.os }}-${{ matrix.build_type }}-${{ hashFiles('CMakeLists.txt','cmake/*.cmake') }}
          restore-keys: |
            deps-${{ runner.os }}-${{ matrix.build_type }}-
            deps-${{ runner.os }}-

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1.2.5
        with:
          version: ${{ env.VULKAN_SDK_VERSION }}
          components: Vulkan-Headers,Vulkan-Loader,Glslang,SPIRV-Tools,SPIRV-Headers
          cache: true
          quiet: true

      - name: Verify Vulkan SDK tools
        shell: powershell
        run: |
          Write-Host "VULKAN_SDK=$env:VULKAN_SDK"
          if (Test-Path "$env:VULKAN_SDK\Bin\glslc.exe") { & "$env:VULKAN_SDK\Bin\glslc.exe" --version }
          else { Write-Host 'glslc not found'; }

      - name: Configure (Ninja Multi-Config)
        shell: powershell
        run: |
          cmake -S . -B build -G "Ninja Multi-Config" -DVULKAN_VISUALIZER_BUILD_EXAMPLE=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build (${{ matrix.build_type }})
        shell: powershell
        run: |
          cmake --build build --config ${{ matrix.build_type }} --parallel

      - name: Package artifacts (${{ matrix.build_type }})
        if: success()
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          $cfg='${{ matrix.build_type }}'
          $exe = "build/examples/$cfg/basic_window.exe"
          if (Test-Path $exe) { Copy-Item $exe artifacts/ }
          $sdl = "build/examples/$cfg/SDL3.dll"; if (Test-Path $sdl) { Copy-Item $sdl artifacts/ }
          $lib = "build/$cfg/vulkan_visualizer.lib"; if (Test-Path $lib) { Copy-Item $lib artifacts/ }
          $pdb = "build/$cfg/vulkan_visualizer.pdb"; if (Test-Path $pdb) { Copy-Item $pdb artifacts/ }
          if (Test-Path "$env:VULKAN_SDK\Bin\glslc.exe") { Copy-Item "$env:VULKAN_SDK\Bin\glslc.exe" artifacts/ }

      - name: Upload artifacts (${{ matrix.build_type }})
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.build_type }}
          path: artifacts
          if-no-files-found: error
          retention-days: 7

      - name: List shader outputs (${{ matrix.build_type }})
        if: success()
        shell: powershell
        run: |
          if (Test-Path build/examples/shaders) { Get-ChildItem build/examples/shaders } else { Write-Host 'No shaders directory.' }
