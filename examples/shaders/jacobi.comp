#version 460
layout(local_size_x=16, local_size_y=16, local_size_z=1) in;
// pSrc (R32F), divergence (R32F) -> pDst (R32F)
layout(binding=0, r32f) uniform image2D pSrc;
layout(binding=1, r32f) uniform image2D divergence;
layout(binding=2, r32f) uniform image2D pDst;

layout(push_constant) uniform PC { float pad0; float W; float H; float pad1; } pc;

float sampleP(ivec2 p){ ivec2 q = clamp(p, ivec2(0), ivec2(int(pc.W)-1, int(pc.H)-1)); return imageLoad(pSrc, q).x; }
float sampleDiv(ivec2 p){ ivec2 q = clamp(p, ivec2(0), ivec2(int(pc.W)-1, int(pc.H)-1)); return imageLoad(divergence, q).x; }

void main(){ ivec2 gid = ivec2(gl_GlobalInvocationID.xy); if (gid.x>=int(pc.W) || gid.y>=int(pc.H)) return;
    float l = sampleP(gid + ivec2(-1,0));
    float r = sampleP(gid + ivec2( 1,0));
    float b = sampleP(gid + ivec2(0,-1));
    float t = sampleP(gid + ivec2(0, 1));
    float d = sampleDiv(gid);
    float p = (l + r + b + t - d) * 0.25;
    imageStore(pDst, gid, vec4(p,0,0,0));
}

