#version 460
layout(local_size_x=16, local_size_y=16, local_size_z=1) in;
// density volume (R32F) -> 2D color (RGBA8)
layout(binding=0, r32f)  uniform image3D density;
layout(binding=1, rgba8) uniform image2D outColor;

// Push constants: camera and volume params
layout(push_constant) uniform PC {
    vec3 camEye; float tanHalfFovY;
    vec3 camRight; float aspect;
    vec3 camUp; float steps;
    vec3 camFwd; float W;
    float H; float D; float pad0; float pad1;
} pc;

void main(){
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    ivec2 sz = imageSize(outColor);
    if (any(greaterThanEqual(gid, sz)) || any(lessThan(gid, ivec2(0)))) return;
    vec2 uv=(vec2(gid)+0.5)/vec2(sz);
    vec3 col = vec3(uv, 1.0) * 0.6 + vec3(0.1,0.12,0.14);
    imageStore(outColor, gid, vec4(col,1));
}
