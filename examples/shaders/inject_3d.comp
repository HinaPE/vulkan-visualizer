#version 460
layout(local_size_x=8, local_size_y=8, local_size_z=8) in;
// vel (RGBA32F xyz) + density (R32F) spherical injection
layout(binding=0, rgba32f) uniform image3D velField;
layout(binding=1, r32f)    uniform image3D denField;

// dt, force, cx, cy, cz, radius, dirx, dirz
layout(push_constant) uniform PC { float dt; float force; float cx; float cy; float cz; float radius; float dirx; float dirz; } pc;

void main(){ ivec3 gid = ivec3(gl_GlobalInvocationID.xyz);
    ivec3 size = imageSize(denField);
    if (any(greaterThanEqual(gid, size)) || any(lessThan(gid, ivec3(0)))) return;
    vec3 p = vec3(gid);
    vec3 c = vec3(pc.cx, pc.cy, pc.cz);
    float r = pc.radius;
    float d = length(p - c);
    if (d <= r){
        float w = 1.0 - (d / max(r, 1e-3));
        // Add directed velocity and density
        vec3 v = imageLoad(velField, gid).xyz;
        vec3 dir = normalize(vec3(pc.dirx, 0.0, pc.dirz));
        v += pc.force * pc.dt * w * dir;
        imageStore(velField, gid, vec4(v,0));
        float den = imageLoad(denField, gid).x;
        den += 1.2 * pc.dt * w;
        imageStore(denField, gid, vec4(den,0,0,0));
    }
}

